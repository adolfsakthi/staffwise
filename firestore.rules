/**
 * @fileOverview Firestore Security Rules for the Attendance Tracking Application.
 *
 * Core Philosophy:
 * This ruleset prioritizes security by requiring users to be authenticated before accessing any data.
 * No authorization checks beyond authentication are performed in this initial version, providing a basic level of protection.
 *
 * Data Structure:
 * The Firestore database contains collections for users, attendance records, grace settings, audit logs, email logs, auto-audit settings, and devices.
 * Each collection stores documents related to its respective entity.
 *
 * Key Security Decisions:
 * - All read and write access requires authentication (`isSignedIn()`).
 * - No specific role-based access control is enforced yet, defaulting to authenticated access.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Enforces that only authenticated users can access user profiles.
     * @path /users/{userId}
     * @allow (get, list, create, update, delete) - Authenticated user.
     * @deny (get, list, create, update, delete) - Unauthenticated user.
     * @principle Requires authentication for all access to user data.
     */
    match /users/{userId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Enforces that only authenticated users can access attendance records.
     * @path /attendance_records/{attendanceRecordId}
     * @allow (get, list, create, update, delete) - Authenticated user.
     * @deny (get, list, create, update, delete) - Unauthenticated user.
     * @principle Requires authentication for all access to attendance records.
     */
    match /attendance_records/{attendanceRecordId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Enforces that only authenticated users can access grace settings.
     * @path /grace_settings/{graceSettingId}
     * @allow (get, list, create, update, delete) - Authenticated user.
     * @deny (get, list, create, update, delete) - Unauthenticated user.
     * @principle Requires authentication for all access to grace settings.
     */
    match /grace_settings/{graceSettingId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Enforces that only authenticated users can access audit logs.
     * @path /audit_logs/{auditLogId}
     * @allow (get, list, create, update, delete) - Authenticated user.
     * @deny (get, list, create, update, delete) - Unauthenticated user.
     * @principle Requires authentication for all access to audit logs.
     */
    match /audit_logs/{auditLogId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Enforces that only authenticated users can access email logs.
     * @path /email_logs/{emailLogId}
     * @allow (get, list, create, update, delete) - Authenticated user.
     * @deny (get, list, create, update, delete) - Unauthenticated user.
     * @principle Requires authentication for all access to email logs.
     */
    match /email_logs/{emailLogId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Enforces that only authenticated users can access auto-audit settings.
     * @path /auto_audit_settings/auto_audit_config
     * @allow (get, list, create, update, delete) - Authenticated user.
     * @deny (get, list, create, update, delete) - Unauthenticated user.
     * @principle Requires authentication for all access to auto-audit settings.
     */
    match /auto_audit_settings/auto_audit_config {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Enforces that only authenticated users can access device information.
     * @path /devices/{deviceId}
     * @allow (get, list, create, update, delete) - Authenticated user.
     * @deny (get, list, create, update, delete) - Unauthenticated user.
     * @principle Requires authentication for all access to device information.
     */
    match /devices/{deviceId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}