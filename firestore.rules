/**
 * @file Firestore Security Rules
 * @description This ruleset allows read and write access to all data for authenticated users.
 *              It prioritizes rapid prototyping by focusing on authentication and deferring
 *              fine-grained authorization and data validation to later stages.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profiles.
 * - /attendance_records/{attendanceRecordId}: Stores employee attendance records.
 * - /grace_settings/{graceSettingId}: Stores grace time settings.
 * - /audit_logs/{auditLogId}: Stores audit logs.
 * - /email_logs/{emailLogId}: Stores email logs.
 * - /auto_audit_settings/auto_audit_config: Stores auto-audit configuration.
 *
 * Key Security Decisions:
 * - Authenticated users can read and write any data.
 * - No data validation is performed in this prototyping phase.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Allows read and write access to user profiles for authenticated users.
     * @path /users/{userId}
     * @allow (read, write) User with any ID can be created, read, updated, or deleted if the user is signed in.
     * @deny (none)
     * @principle Authenticated users can access any user profile.
     */
    match /users/{userId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows read and write access to attendance records for authenticated users.
     * @path /attendance_records/{attendanceRecordId}
     * @allow (read, write) Any user can create, read, update, or delete attendance records if the user is signed in.
     * @deny (none)
     * @principle Authenticated users can access any attendance record.
     */
    match /attendance_records/{attendanceRecordId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows read and write access to grace settings for authenticated users.
     * @path /grace_settings/{graceSettingId}
     * @allow (read, write) Any user can create, read, update, or delete grace settings if the user is signed in.
     * @deny (none)
     * @principle Authenticated users can access any grace setting.
     */
    match /grace_settings/{graceSettingId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows read and write access to audit logs for authenticated users.
     * @path /audit_logs/{auditLogId}
     * @allow (read, write) Any user can create, read, update, or delete audit logs if the user is signed in.
     * @deny (none)
     * @principle Authenticated users can access any audit log.
     */
    match /audit_logs/{auditLogId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows read and write access to email logs for authenticated users.
     * @path /email_logs/{emailLogId}
     * @allow (read, write) Any user can create, read, update, or delete email logs if the user is signed in.
     * @deny (none)
     * @principle Authenticated users can access any email log.
     */
    match /email_logs/{emailLogId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows read and write access to the auto-audit settings for authenticated users.
     * @path /auto_audit_settings/auto_audit_config
     * @allow (read, write) Any user can create, read, update, or delete the auto-audit configuration if the user is signed in.
     * @deny (none)
     * @principle Authenticated users can access the auto-audit settings.
     */
    match /auto_audit_settings/auto_audit_config {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }
  }
}