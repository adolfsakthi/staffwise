/**
 * @file Firebase Security Rules for Attendance Management System
 *
 * @description This ruleset provides basic read and write access to all collections for all authenticated users.
 * It is intended for rapid prototyping and should be refined for production use.
 *
 * Core Philosophy: Open access for authenticated users.
 * Data Structure: Hierarchical data structure with clients, branches, employees, and associated data.
 * Key Security Decisions: Basic read and write access to all collections.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Grants access to all Clients collection for all authenticated users.
     * @path /clients/{clientId}
     * @allow (get, list, create, update, delete): Any authenticated user can perform any operation.
     * @deny None
     * @principle Grants create, update, delete access to all clients for authenticated users for prototyping.
     */
    match /clients/{clientId} {
      allow get, list, create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants access to all Branches for all authenticated users.
     * @path /clients/{clientId}/branches/{branchId}
     * @allow (get, list, create, update, delete): Any authenticated user can perform any operation.
     * @deny None
     * @principle Grants create, update, delete access to all branches for authenticated users for prototyping.
     */
    match /clients/{clientId}/branches/{branchId} {
      allow get, list, create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants access to all Employees for all authenticated users.
     * @path /clients/{clientId}/branches/{branchId}/employees/{employeeId}
     * @allow (get, list, create, update, delete): Any authenticated user can perform any operation.
     * @deny None
     * @principle Grants create, update, delete access to all employees for authenticated users for prototyping.
     */
    match /clients/{clientId}/branches/{branchId}/employees/{employeeId} {
      allow get, list, create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants access to all BiometricDevices for all authenticated users.
     * @path /clients/{clientId}/branches/{branchId}/biometricDevices/{deviceId}
     * @allow (get, list, create, update, delete): Any authenticated user can perform any operation.
     * @deny None
     * @principle Grants create, update, delete access to all biometric devices for authenticated users for prototyping.
     */
    match /clients/{clientId}/branches/{branchId}/biometricDevices/{deviceId} {
      allow get, list, create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants access to all AttendanceRecords for all authenticated users.
     * @path /clients/{clientId}/branches/{branchId}/employees/{employeeId}/attendanceRecords/{attendanceRecordId}
     * @allow (get, list, create, update, delete): Any authenticated user can perform any operation.
     * @deny None
     * @principle Grants create, update, delete access to all attendance records for authenticated users for prototyping.
     */
    match /clients/{clientId}/branches/{branchId}/employees/{employeeId}/attendanceRecords/{attendanceRecordId} {
      allow get, list, create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants access to all LeaveRequests for all authenticated users.
     * @path /clients/{clientId}/branches/{branchId}/employees/{employeeId}/leaveRequests/{leaveRequestId}
     * @allow (get, list, create, update, delete): Any authenticated user can perform any operation.
     * @deny None
     * @principle Grants create, update, delete access to all leave requests for authenticated users for prototyping.
     */
    match /clients/{clientId}/branches/{branchId}/employees/{employeeId}/leaveRequests/{leaveRequestId} {
      allow get, list, create, update, delete: if isSignedIn();
    }

     /**
     * @description Grants access to all Notifications for all authenticated users.
     * @path users/{userId}/notifications/{notificationId}
     * @allow (get, list, create, update, delete): Any authenticated user can perform any operation.
     * @deny None
     * @principle Grants create, update, delete access to all notifications for authenticated users for prototyping.
     */
    match /users/{userId}/notifications/{notificationId} {
          allow get, list, create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants access to all EmailLogs for all authenticated users.
     * @path emailLogs/{emailLogId}
     * @allow (get, list, create, update, delete): Any authenticated user can perform any operation.
     * @deny None
     * @principle Grants create, update, delete access to all email logs for authenticated users for prototyping.
     */
    match /emailLogs/{emailLogId} {
      allow get, list, create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants access to all AuditLogs for all authenticated users.
     * @path auditLogs/{auditLogId}
     * @allow (get, list, create, update, delete): Any authenticated user can perform any operation.
     * @deny None
     * @principle Grants create, update, delete access to all audit logs for authenticated users for prototyping.
     */
    match /auditLogs/{auditLogId} {
      allow get, list, create, update, delete: if isSignedIn();
    }
  }
}