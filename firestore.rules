/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a strict user-ownership model for user profiles and allows open reads for other data.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile information. Access is restricted to the user themselves.
 * - /attendance_records/{attendanceRecordId}: Stores attendance records. Currently allows public read access.
 * - /grace_settings/{graceSettingId}: Stores grace period settings. Currently allows public read access.
 * - /audit_logs/{auditLogId}: Stores audit logs. Currently allows public read access.
 * - /email_logs/{emailLogId}: Stores email logs. Currently allows public read access.
 * - /auto_audit_settings/auto_audit_config: Stores auto-audit settings. Currently allows public read access.
 *
 * Key Security Decisions:
 * - User listing is disallowed.
 * - Other collections are currently configured for open read access in this prototyping phase.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile information.
     * @path /users/{userId}
     * @allow (create) User with ID 'user123' can create their profile.
     *   - Auth: { uid: 'user123' }
     *   - Data: { uid: 'user123', email: 'test@example.com', role: 'Staff', property_code: '123', createdAt: '2024-01-01T00:00:00Z' }
     * @allow (get) User with ID 'user123' can read their profile.
     *   - Auth: { uid: 'user123' }
     * @allow (update) User with ID 'user123' can update their profile.
     *   - Auth: { uid: 'user123' }
     * @allow (delete) User with ID 'user123' can delete their profile.
     *   - Auth: { uid: 'user123' }
     * @deny (create) User with ID 'user456' cannot create a profile for 'user123'.
     *   - Auth: { uid: 'user456' }
     *   - Data: { uid: 'user123', email: 'test@example.com', role: 'Staff', property_code: '123', createdAt: '2024-01-01T00:00:00Z' }
     * @principle Enforces document ownership for all operations on user profiles.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }
      function isOwner(userId) {
        return request.auth.uid == userId;
      }
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.uid == userId;
      allow update: if isOwner(userId) && resource.data.uid == request.resource.data.uid;
      allow delete: if isOwner(userId);
    }

    /**
     * @description Controls access to attendance records.
     * @path /attendance_records/{attendanceRecordId}
     * @allow (get) Any signed-in user can read any attendance record.
     *   - Auth: { uid: 'user123' }
     * @allow (list) Any signed-in user can list attendance records.
     *   - Auth: { uid: 'user123' }
     * @deny (create) No one can create attendance record.
     *   - Auth: { uid: 'user123' }
     * @deny (update) No one can update attendance record.
     *   - Auth: { uid: 'user123' }
     * @deny (delete) No one can delete attendance record.
     *   - Auth: { uid: 'user123' }
     * @principle Allows public read access for prototyping. Write access is denied.
     */
    match /attendance_records/{attendanceRecordId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to grace settings.
     * @path /grace_settings/{graceSettingId}
     * @allow (get) Any signed-in user can read any grace setting.
     *   - Auth: { uid: 'user123' }
     * @allow (list) Any signed-in user can list grace settings.
     *   - Auth: { uid: 'user123' }
     * @deny (create) No one can create grace setting.
     *   - Auth: { uid: 'user123' }
     * @deny (update) No one can update grace setting.
     *   - Auth: { uid: 'user123' }
     * @deny (delete) No one can delete grace setting.
     *   - Auth: { uid: 'user123' }
     * @principle Allows public read access for prototyping. Write access is denied.
     */
    match /grace_settings/{graceSettingId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to audit logs.
     * @path /audit_logs/{auditLogId}
     * @allow (get) Any signed-in user can read any audit log.
     *   - Auth: { uid: 'user123' }
     * @allow (list) Any signed-in user can list audit logs.
     *   - Auth: { uid: 'user123' }
     * @deny (create) No one can create audit log.
     *   - Auth: { uid: 'user123' }
     * @deny (update) No one can update audit log.
     *   - Auth: { uid: 'user123' }
     * @deny (delete) No one can delete audit log.
     *   - Auth: { uid: 'user123' }
     * @principle Allows public read access for prototyping. Write access is denied.
     */
    match /audit_logs/{auditLogId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to email logs.
     * @path /email_logs/{emailLogId}
     * @allow (get) Any signed-in user can read any email log.
     *   - Auth: { uid: 'user123' }
     * @allow (list) Any signed-in user can list email logs.
     *   - Auth: { uid: 'user123' }
     * @deny (create) No one can create email log.
     *   - Auth: { uid: 'user123' }
     * @deny (update) No one can update email log.
     *   - Auth: { uid: 'user123' }
     * @deny (delete) No one can delete email log.
     *   - Auth: { uid: 'user123' }
     * @principle Allows public read access for prototyping. Write access is denied.
     */
    match /email_logs/{emailLogId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to auto audit settings.
     * @path /auto_audit_settings/auto_audit_config
     * @allow (get) Any signed-in user can read the auto audit config.
     *   - Auth: { uid: 'user123' }
     * @allow (list) Any signed-in user can list auto audit configs.
     *   - Auth: { uid: 'user123' }
     * @deny (create) No one can create auto audit config.
     *   - Auth: { uid: 'user123' }
     * @deny (update) No one can update auto audit config.
     *   - Auth: { uid: 'user123' }
     * @deny (delete) No one can delete auto audit config.
     *   - Auth: { uid: 'user123' }
     * @principle Allows public read access for prototyping. Write access is denied.
     */
    match /auto_audit_settings/auto_audit_config {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}